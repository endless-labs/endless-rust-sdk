[workspace]
resolver = "2"

members = [
    "crates/endless-aggregator",
    "crates/endless-api-types",
    "crates/endless-bitvec",
    "crates/endless-crypto",
    "crates/endless-crypto-derive",
    "crates/endless-dkg",
    "crates/endless-framework",
    "crates/endless-gas-algebra",
    "crates/endless-gas-schedule",
    "crates/endless-global-constants",
    "crates/endless-indexer-client",
    "crates/endless-infallible",
    "crates/endless-ledger",
    "crates/endless-log-derive",
    "crates/endless-logger",
    "crates/endless-native-interface",
    "crates/endless-node-identity",
    "crates/endless-openapi",
    "crates/endless-package-builder",
    "crates/endless-protos",
    "crates/endless-rest-client",
    "crates/endless-sdk",
    "crates/endless-types",
    "crates/endless-vm-types",

    # third_party/move
    "third_party/move/extensions/async/move-async-vm",
    "third_party/move/extensions/move-table-extension",
    "third_party/move/move-analyzer",
    "third_party/move/move-binary-format",
    "third_party/move/move-binary-format/serializer-tests",
    "third_party/move/move-borrow-graph",
    "third_party/move/move-bytecode-verifier",
    "third_party/move/move-bytecode-verifier/bytecode-verifier-tests",
    "third_party/move/move-bytecode-verifier/fuzz",
    "third_party/move/move-bytecode-verifier/invalid-mutations",
    "third_party/move/move-bytecode-verifier/transactional-tests",
    "third_party/move/move-command-line-common",
    "third_party/move/move-compiler",
    "third_party/move/move-compiler-v2",
    "third_party/move/move-compiler-v2/tools/testdiff",
    "third_party/move/move-compiler-v2/transactional-tests",
    "third_party/move/move-compiler/transactional-tests",
    "third_party/move/move-core/types",
    "third_party/move/move-examples",
    "third_party/move/move-ir-compiler",
    "third_party/move/move-ir-compiler/move-bytecode-source-map",
    "third_party/move/move-ir-compiler/move-ir-to-bytecode",
    "third_party/move/move-ir-compiler/move-ir-to-bytecode/syntax",
    "third_party/move/move-ir-compiler/transactional-tests",
    "third_party/move/move-ir/types",
    "third_party/move/move-model",
    "third_party/move/move-model/bytecode",
    "third_party/move/move-model/bytecode-test-utils",
    "third_party/move/move-prover",
    "third_party/move/move-prover/boogie-backend",
    "third_party/move/move-prover/bytecode-pipeline",
    "third_party/move/move-prover/lab",
    "third_party/move/move-prover/move-abigen",
    "third_party/move/move-prover/move-docgen",
    "third_party/move/move-prover/move-errmapgen",
    "third_party/move/move-prover/test-utils",
    "third_party/move/move-symbol-pool",
    "third_party/move/move-vm/integration-tests",
    "third_party/move/move-vm/paranoid-tests",
    "third_party/move/move-vm/runtime",
    "third_party/move/move-vm/test-utils",
    "third_party/move/move-vm/transactional-tests",
    "third_party/move/move-vm/types",
    "third_party/move/testing-infra/module-generation",
    "third_party/move/testing-infra/test-generation",
    "third_party/move/testing-infra/transactional-test-runner",
    "third_party/move/tools/move-bytecode-utils",
    "third_party/move/tools/move-bytecode-viewer",
    "third_party/move/tools/move-cli",
    "third_party/move/tools/move-coverage",
    "third_party/move/tools/move-disassembler",
    "third_party/move/tools/move-explain",
    "third_party/move/tools/move-package",
    "third_party/move/tools/move-resource-viewer",
    "third_party/move/tools/move-unit-test",
]

default-members = ["crates/endless-sdk"]

[workspace.package]
authors = ["Endless Labs <opensource@endlesslabs.com>"]
edition = "2021"
homepage = "https://endlesslabs.com"
license = "Apache-2.0"
publish = false
repository = "https://github.com/endless-labs/endless-core"
rust-version = "1.83.0"

[workspace.dependencies]
endless-crypto-derive = { path = "crates/endless-crypto-derive" }
endless-crypto = { path = "crates/endless-crypto" }
endless-bitvec = { path = "crates/endless-bitvec" }
endless-dkg = { path = "crates/endless-dkg" }
endless-global-constants = { path = "crates/endless-global-constants" }
endless-cached-packages = { path = "crates/endless-framework/cached-packages" }
endless-indexer-client = { path = "crates/endless-indexer-client" }
endless-ledger = { path = "crates/endless-ledger" }
endless-logger = { path = "crates/endless-logger" }
endless-rest-client = { path = "crates/endless-rest-client" }
endless-types = { path = "crates/endless-types" }
endless-framework = { path = "crates/endless-framework" }
endless-package-builder = { path = "crates/endless-package-builder" }
endless-aggregator = { path = "crates/endless-aggregator" }
endless-gas-algebra = { path = "crates/endless-gas-algebra" }
endless-gas-schedule = { path = "crates/endless-gas-schedule" }
endless-native-interface = { path = "crates/endless-native-interface" }
endless-sdk-builder = { path = "crates/endless-sdk-builder" }
endless-vm-types = { path = "crates/endless-vm-types" }
endless-infallible = { path = "crates/endless-infallible" }
endless-log-derive = { path = "crates/endless-log-derive" }
endless-node-identity = { path = "crates/endless-node-identity" }
endless-protos = { path = "crates/endless-protos" }
endless-openapi = { path = "crates/endless-openapi" }
endless-api-types = { path = "crates/endless-api-types" }

# MOVE DEPENDENCIES
move-abigen = { path = "third_party/move/move-prover/move-abigen" }
move-binary-format = { path = "third_party/move/move-binary-format" }
move-bytecode-verifier = { path = "third_party/move/move-bytecode-verifier" }
move-bytecode-utils = { path = "third_party/move/tools/move-bytecode-utils" }
move-cli = { path = "third_party/move/tools/move-cli" }
move-command-line-common = { path = "third_party/move/move-command-line-common" }
move-coverage = { path = "third_party/move/tools/move-coverage" }
move-compiler = { path = "third_party/move/move-compiler" }
move-compiler-v2 = { path = "third_party/move/move-compiler-v2" }
move-core-types = { path = "third_party/move/move-core/types" }
move-docgen = { path = "third_party/move/move-prover/move-docgen" }
move-disassembler = { path = "third_party/move/tools/move-disassembler" }
move-ir-types = { path = "third_party/move/move-ir/types" }
move-ir-compiler = { path = "third_party/move/move-ir-compiler" }
move-bytecode-source-map = { path = "third_party/move/move-ir-compiler/move-bytecode-source-map" }
move-model = { path = "third_party/move/move-model" }
move-package = { path = "third_party/move/tools/move-package" }
move-prover = { path = "third_party/move/move-prover" }
move-prover-boogie-backend = { path = "third_party/move/move-prover/boogie-backend" }
move-prover-bytecode-pipeline = { path = "third_party/move/move-prover/bytecode-pipeline" }
move-stackless-bytecode = { path = "third_party/move/move-model/bytecode" }
move-stackless-bytecode-test-utils = { path = "third_party/move/move-model/bytecode-test-utils" }
endless-move-stdlib = { path = "crates/endless-framework/move-stdlib" }
endless-table-natives = { path = "crates/endless-framework/table-natives" }
move-prover-test-utils = { path = "third_party/move/move-prover/test-utils" }
move-resource-viewer = { path = "third_party/move/tools/move-resource-viewer" }
move-symbol-pool = { path = "third_party/move/move-symbol-pool" }
move-table-extension = { path = "third_party/move/extensions/move-table-extension" }
move-transactional-test-runner = { path = "third_party/move/testing-infra/transactional-test-runner" }
move-unit-test = { path = "third_party/move/tools/move-unit-test", features = ["table-extension"] }
move-vm-runtime = { path = "third_party/move/move-vm/runtime" }
move-vm-test-utils = { path = "third_party/move/move-vm/test-utils", features = ["table-extension"] }
move-vm-types = { path = "third_party/move/move-vm/types" }
move-errmapgen = { path = "third_party/move/move-prover/move-errmapgen" }

anyhow = "1.0.71"
arr_macro = "0.2.1"
ark-ed-on-bls12-381-bandersnatch = "0.4.0"
ark-bls12-381 = "0.4.0"
ark-bn254 = "0.4.0"
ark-ec = "0.4.0"
ark-ff = "0.4.0"
ark-groth16 = "0.4.0"
ark-poly = { version = "^0.4.2", default-features = false }
ark-serialize = "0.4.0"
ark-std = { version = "0.4.0", features = ["getrandom"] }
async-trait = "0.1.53"
base64 = "0.13.0"
base64-url = "2.0.1"
backtrace = "0.3.58"
bcs = { git = "https://github.com/aptos-labs/bcs.git", rev = "d31fab9d81748e2594be5cd5cdf845786a30562d" }
better_any = "0.1.1"
bitvec = "1.0.1"
blake2 = "0.10.4"
blake2-rfc = "0.2.18"
blst = "0.3.11"
# The __private_bench feature exposes the Fp12 type which we need to implement a multi-threaded multi-pairing.
blstrs = { version = "0.7.1", features = ["serde", "__private_bench"] }
bulletproofs = { version = "4.0.0" }
byteorder = "1.4.3"
bytes = { version = "1.4.0", features = ["serde"] }
chrono = { version = "0.4.19", features = ["clock", "serde"] }
ciborium = "0.2"
claims = "0.7"
clap = { version = "4.3.9", features = ["derive", "unstable-styles"] }
codespan-reporting = "0.11.1"
console-subscriber = "0.1.8"
coset = "0.3"
crate_crypto_internal_eth_kzg_bls12_381 = "=0.5.2"
crate_crypto_internal_eth_kzg_polynomial = "=0.5.2"
criterion = "0.3.5"
criterion-cpu-time = "0.1.0"
crossbeam = "0.8.1"
crossbeam-channel = "0.5.4"
curve25519-dalek = "3"
curve25519-dalek-ng = "4"
datatest-stable = "0.1.1"
derivative = "2.2.0"
digest = "0.9.0"
dunce = "1.0.4"
ed25519-dalek = { version = "1.0.1", features = ["std", "serde"] }
ed25519-dalek-bip32 = "0.2.0"
either = "1.6.1"
erased-serde = "0.3.13"
fail = "0.5.0"
ff = "0.13"
fixed = "1.25.1"
flate2 = "1.0.24"
futures = "0.3.29"
futures-core = "0.3.29"
group = "0.13"
heck = "0.4.1"
hex = "0.4.3"
hkdf = "0.10.0"
hostname = "0.3.1"
http = "0.2.9"
indoc = "1.0.6"
itertools = "0.10.3"
jsonwebtoken = "8.1"
lazy_static = "1.4.0"
libfuzzer-sys = "0.4.6"
libsecp256k1 = "0.7.0"
log = "0.4.17"
lru = "0.7.5"
merlin = "3"
mirai-annotations = "1.12.0"
more-asserts = "0.3.0"
num-bigint = { version = "0.3.2", features = ["rand"] }
num_cpus = "1.13.1"
num-derive = "0.4.2"
num-integer = "0.1.46"
num-traits = "0.2.19"
once_cell = "1.10.0"
ouroboros = "0.15.6"
p256 = { version = "0.13.2" }
signature = "2.1.0"
pairing = "0.23"
parking_lot = "0.12.0"
paste = "1.0.7"
passkey-authenticator = { version = "0.2.0", features = ["testable"] }
passkey-client = { version = "0.2.0" }
passkey-types = { version = "0.2.0" }
pbjson = "0.5.1"
percent-encoding = "2.1.0"
poem = { version = "=1.3.59", default-features = false, features = ["anyhow"] }
poem-openapi = { version = "=2.0.11", features = ["url"] }
poem-openapi-derive = "=2.0.11"
poseidon-ark = { git = "https://github.com/arnaucube/poseidon-ark.git", rev = "6d2487aa1308d9d3860a2b724c485d73095c1c68" }
pretty_assertions = "1.2.1"
proc-macro2 = "1.0.38"
proptest = "1.6.0"
proptest-derive = "0.5.1"
prost = { version = "0.12.3", features = ["no-recursion-limit"] }
prost-types = "0.12.3"
quote = "1.0.18"
rand = "0.7.3"
rand_chacha = { version = "0.3.0", default-features = false }
rand_core = "0.5.1"
rayon = "1.5.2"
regex = "1.9.3"
reqwest = { version = "0.11.11", features = ["blocking", "cookies", "json", "stream"] }
ring = { version = "0.16.20", features = ["std"] }
ripemd = "0.1.1"
rsa = { version = "0.9.6" }
sha2 = "0.9.3"
sha2_0_10_6 = { package = "sha2", version = "0.10.6" }
sha3 = "0.9.1"
siphasher = "0.3.10"
serde = { version = "1.0.193", features = ["derive", "rc"] }
serde-big-array = "0.5.1"
serde_bytes = "0.11.6"
serde_json = { version = "1.0.81", features = ["preserve_order", "arbitrary_precision"] }                                       # Note: arbitrary_precision is required to parse u256 in JSON
serde-name = "0.1.1"
serde-generate = { git = "https://github.com/aptos-labs/serde-reflection", rev = "73b6bbf748334b71ff6d7d09d06a29e3062ca075" }
serde-reflection = { git = "https://github.com/aptos-labs/serde-reflection", rev = "73b6bbf748334b71ff6d7d09d06a29e3062ca075" }
serde_with = "3.4.0"
serde_yaml = "0.8.24"
smallvec = "1.8.0"
static_assertions = "1.1.0"
strum = "0.24.1"
strum_macros = "0.24.2"
syn = { version = "1.0.92", features = ["derive", "extra-traits"] }
tempfile = "3.3.0"
termcolor = "1.1.2"
test-case = "3.1.0"
textwrap = "0.15.0"
thiserror = "1.0.37"
time = { version = "0.3.24", features = ["serde"] }
tiny-bip39 = "0.8.2"
tiny-keccak = { version = "2.0.2", features = ["keccak", "sha3"] }
tracing = "0.1.37"
tracing-subscriber = { version = "0.3.17", features = ["json", "env-filter"] }
trybuild = "1.0.80"
tokio = { version = "1.35.1", features = ["full"] }
toml = "0.7.4"
tonic = { version = "0.11.0", features = ["transport", "codegen"] }
url = { version = "2.4.0", features = ["serde"] }
walkdir = "2.3.3"
x25519-dalek = "1.2.0"
bs58 = "0.5.0"

[patch.crates-io]
serde-reflection = { git = "https://github.com/aptos-labs/serde-reflection", rev = "73b6bbf748334b71ff6d7d09d06a29e3062ca075" }
merlin = { git = "https://github.com/aptos-labs/merlin" }
x25519-dalek = { git = "https://github.com/aptos-labs/x25519-dalek", branch = "zeroize_v1" }
